HTML( <link rel="stylesheet" href="typical.css" type="text/css" >)
We write technical and academic documents, and are not happy with typical content management systems.

Items(
    ∙ The math has to look good.
    ∙ We have to get the references in the right style.
    ∙ We're posting one possibly very long document, not a daily sequence of short entries.
    ∙ We need a PDF and web version of the document.
    ∙ We are collaborating on one document, and some of our collaborators may not know the 
        intricacies of LaTeX or HTML.
)

The MMS is a wrapper around LaTeX to make these things easier. Document
parsers/translators often don't produce good output without a ton of tweaking.
Markdown is a pain for techncial documents ("A * B * C" comes out as "A bf(B) C", for
example). The solution here is to specify a short list of elements to mark section
heads, citations, and so on, and expand those to the appropriate TeX or HTML as needed.

Paragraph(Requisites)
To compile the LaTeX and do the conversions using the script here, you will need 
one machine with LaTeX and basic POSIX compliance.  

It is easiest to set up POSIX compliance via a package management
system. Linux users know their package manager; Mac users can use
Link(http://macports.org~~MacPorts) or Link(http://finkproject.org~~Fink); Windows
users can use Link(http://cygwin.com~~Cygwin).  Each of these package managers will
set up a full TeX environment in a few clicks, not to mention thousands of other
programs, libraries, language compilers, and games. You will need:

Items(
∙ make
∙ a LaTeX installation
∙ m4
∙ a C compiler (probably gcc or clang)
)

Are you a Link(http://github.com~~Github) user? Github offers a simple means to host web
pages, so if you have a github repository set up, the MMS has a hook to post to it.



Chapter(The basic idea)

We use m4 to convert certain blobs of text to LaTeX-formatted blobs of HTML-formatted
blobs, depending on the output type. Anything that is not plain text or math has an
associated m4 command.

Both LaTeX and HTML largely ignore the white space in your text file, so feel free to
tab-indent whenever it's useful to you.

Math is standard TeX math. We use MathJax to render it in HTML on not-too-old browsers.

Both the LaTeX and HTML headers specify an encoding of UTF-8. On anything
but Windows, this is the default; on Windows, please follow the custom of
Link(http://w3techs.com/technologies/overview/character_encoding/all~~over 80\% of
the web) and save as UTF-8.

Section(Some commands)
This section is a demo of the various commands, and doesn't make much sense as prose.
Compare the source for this manual to the PDF or HTML output to see how the
commands work.

Subsection(Sectioning)
There are Chapter, Section, Subsection, and Paragraph commands. If you need more depth than that
you're probably trying too hard. The Paragraph is sometimes useful for marking a
list of ideas within a section.

Subsection(Text decoration et al.)

Paragraph(changing typeface)
    em(Emphasis, probably italic)
    sc(small caps)
    bf(boldface, use sparingly)
    tt(teletype, for computer code-like fragments in text)

Paragraph(Linking)
    Link(http://example.com~~text describing the url)

Paragraph(Citations)
The MMS was developed for a distant spinoff of a modeling textbook
Citep(klemens:modeling). It was also used for documenting Citet(klemens:tea~~A survey
processing system).

The second argument to Citep is text for the HTML version; BibTeX autogenerates the right text for the PDF.

The content of the citations goes into a BibTeX database. See the example, or ask your
search engine for hundreds of tutorials.

Paragraph(Lists)

Items(
    ∙ bulleted lists look like this.
    ∙ They're unicode bullets. If you don't have an easy way to type them, you could cut/paste
        the bullets here.
    Items(
        ∙ Lists may be nested to arbitrary depth.
    )
)



Chapter(Production)
As noted above, you will need a working copy of LaTeX, and a
basic POSIX environment to compile the document from m4 to PDF or HTML.


Copy the tt(makefile) from this project directory (i.e., the tt(manual) subdirectory of the MMS) to your project directory. It has to be named tt(makefile) or tt(Makefile).
Open the makefile in your text editor and read the notes on setting the configuration variables.

When you are ready to compile the document, type
tt(make)
to generate the PDF, 
tt(make html)
to generate the HTML, and 
tt(make html push)
to generate the HTML and push it to Github.

It relies on a lot of search-and-replace via sed, m4 for the above fixes, and a few
other hacks. The bibliography is generated via BibTeX and then a sed script converts
it to HTML.
